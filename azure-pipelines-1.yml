trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  VITE_API_HOST: 'http://localhost:7091'
  VITE_API_STREAMING: true
  LLM_NAME: 'docsgpt'
  USER_AGENT: 'myagent'
  CELERY_BROKER_URL: 'redis://redis:6379/0'
  CELERY_RESULT_BACKEND: 'redis://redis:6379/1'
  MONGO_URI: 'mongodb://mongo:27017/docsgpt'
  CACHE_REDIS_URL: 'redis://redis:6379/2'
  dockerRegistryServiceConnection: 'e6c021b0-4243-40ec-a488-70d5a39cc029'

jobs:
- job: BuildAndDeploy
  steps:
  - task: Docker@2
    displayName: 'Build frontend'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: './frontend'
      command: 'build'
      Dockerfile: './frontend/Dockerfile'
      tags: |
        $(Build.BuildId)

  - task: Docker@2
    displayName: 'Build backend'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: './application'
      command: 'build'
      Dockerfile: './application/Dockerfile'
      tags: |
        $(Build.BuildId)

  - script: |
      docker network create my-network || true
      docker run -d --name redis --net my-network -p 6379:6379 redis:6-alpine
      docker run -d --name mongo --net my-network -p 27017:27017 -v mongodb_data_container:/data/db mongo:6
      docker run -d --name frontend --net my-network -p 5173:5173 $(dockerRegistryServiceConnection)/frontend:$(Build.BuildId)
      docker run -d --name backend --net my-network -p 7091:7091 $(dockerRegistryServiceConnection)/backend:$(Build.BuildId)
    displayName: 'Start all services (redis, mongo, frontend, backend)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'